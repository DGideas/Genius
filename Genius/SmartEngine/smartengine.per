;Genius组件:SmartEngine
;Genius.SmartEngine.smartengine
;SmartEngine用于整合各引擎的Build和通用兵种生产等功能.

#load-if-not-defined HUN-CIV
;排除
(defrule
(current-age <= castle-age);城堡时代或以下
(housing-headroom <= 3);人口差额小于3
(population-headroom > 0);没有到达最大人口限制
(can-build house)
=>
(build house)
(chat-to-allies "一个房屋")
)

(defrule
(current-age == imperial-age);帝王时代
(housing-headroom <= 5);人口差额小于5
(population-headroom > 0);没有到达最大人口限制
(can-build house)
=>
(build house)
(chat-to-allies "一个房屋")
)
#end-if

(defrule
(building-type-count-total market == 0);没有市场
(can-build market);能建造市场
(building-type-count-total town-center > 0);当存在城镇中心:防止城镇中心被毁后建造失控
=>
(build market);建造市场
(chat-to-allies "建造市场")
)

(defrule
(building-type-count-total lumber-camp > 0);当存在伐木场
(building-type-count-total mill == 0);且磨坊为0
(wood-amount >= 100 );木材达标
(can-build mill);能建造磨坊
=>
(chat-to-allies "一个磨坊")
(build mill);建造
)

(defrule
(current-age == castle-age);城堡时代
(building-type-count-total mill == 1);且磨坊为1
(wood-amount >= 100 );木材达标
(can-build mill);能建造磨坊
=>
(set-strategic-number sn-mill-max-distance 100);最大磨坊距离100
(chat-to-allies "另一个磨坊")
(build mill);建造
)

(defrule
(building-type-count-total farm < age1farmnum);农田数目不达标
(can-build farm)
(building-type-count-total town-center > 0);当存在城镇中心:防止城镇中心被毁后建造失控
(idle-farm-count < 2);闲置农田不多
(game-time >= 20)
(players-unit-type-count 0 59 == 0)
(players-unit-type-count 0 65 == 0)
(players-unit-type-count 0 43 == 0)
(unit-type-count 594 == 0)
(unit-type-count 595 == 0)
(unit-type-count 833 == 0)
(unit-type-count 834 == 0)
;已经过去20S,什么食物都没找到,改种田
=>
(chat-to-allies "耕田")
(build farm);耕田
)

(defrule
(building-type-count-total farm < age2farmnum);农田数目不达标
(can-build farm)
(current-age == feudal-age);封建时代
(building-type-count-total town-center > 0);当存在城镇中心:防止城镇中心被毁后建造失控
(idle-farm-count < 2);闲置农田不多
=>
(chat-to-allies "耕田")
(build farm);耕田
)

(defrule
(building-type-count-total farm < age3farmnum);农田数目不达标
(can-build farm)
(current-age == castle-age);城堡时代
(building-type-count-total town-center > 0);当存在城镇中心:防止城镇中心被毁后建造失控
(idle-farm-count < 3);闲置农田不多
=>
(chat-to-allies "耕田")
(build farm);耕田
)

(defrule
(building-type-count-total farm < age4farmnum);农田数目不达标
(can-build farm)
(current-age == imperial-age);帝王时代
(building-type-count-total town-center > 0);当存在城镇中心:防止城镇中心被毁后建造失控
(idle-farm-count < 3);闲置农田不多
=>
(chat-to-allies "耕田")
(build farm);耕田
)

(defrule
(building-type-count-total university == 0);没有大学
(can-build university);能建造大学
(building-type-count-total town-center > 0);当存在城镇中心:防止城镇中心被毁后建造失控
=>
(build university);建造大学
(chat-to-allies "建造大学")
)

(defrule
(building-type-count-total stable == 0);马厩为0
(building-type-count-total monastery >= 1);有修道院
(building-type-count-total archery-range >= 1);有射箭场
(can-build stable);能建造
(building-type-count-total town-center > 0);当存在城镇中心:防止城镇中心被毁后建造失控
=>
(chat-to-allies "建造马厩")
(build stable);建造
)

(defrule
(building-type-count-total stable == 1);马厩为1
(building-type-count-total monastery >= 1);有修道院
(building-type-count-total archery-range >= 1);有射箭场
(can-build stable);能建造
(building-type-count-total town-center > 0);当存在城镇中心:防止城镇中心被毁后建造失控
(current-age == imperial-age);帝王时代
(wood-amount > 300)
=>
(chat-to-allies "建造马厩")
(build stable);建造
)

(defrule
(building-type-count-total archery-range == 0);射箭场为0
(goal rushyet yes)
(can-build archery-range);能建造射箭场
(building-type-count-total town-center > 0);当存在城镇中心:防止城镇中心被毁后建造失控
=>
(chat-to-allies "建造射箭场")
(build archery-range);建造
)

(defrule
(building-type-count-total archery-range == 0);射箭场为0
(goal rushyet no)
(building-type-count-total monastery >= 1);有修道院
(building-type-count-total barracks >= 1);有军营
(can-build archery-range);能建造射箭场
(building-type-count-total town-center > 0);当存在城镇中心:防止城镇中心被毁后建造失控
=>
(chat-to-allies "建造射箭场")
(build archery-range);建造
)

(defrule
(resource-found wood)
(strategic-number sn-camp-max-distance == 8)
(game-time < 4)
=>
(set-strategic-number sn-camp-max-distance 11)
(disable-self)
)
(defrule
(resource-found wood)
(strategic-number sn-camp-max-distance == 11)
(game-time < 7)
=>
(set-strategic-number sn-camp-max-distance 13)
(disable-self)
)
(defrule
(resource-found wood)
(strategic-number sn-camp-max-distance == 13)
(game-time < 12)
=>
(set-strategic-number sn-camp-max-distance 15)
(disable-self)
)
(defrule
(resource-found wood)
(strategic-number sn-camp-max-distance == 15)
(game-time < 16)
=>
(set-strategic-number sn-camp-max-distance 17)
(disable-self)
)
(defrule
(resource-found wood)
(strategic-number sn-camp-max-distance == 17)
(game-time < 25)
=>
(set-strategic-number sn-camp-max-distance 20)
(disable-self)
)
(defrule
(resource-found wood)
(strategic-number sn-camp-max-distance == 20)
(game-time > 25)
=>
(set-strategic-number sn-camp-max-distance 22)
(disable-self)
)

(defrule
(current-age == dark-age)
(resource-found wood)
(building-type-count-total lumber-camp == 0);伐木场为0
(can-build lumber-camp)
=>
(chat-to-allies "建造伐木场")
(build lumber-camp)
)



(defrule
(building-type-count-total lumber-camp > 0);伐木场大于0
(wood-amount >= 150);木材达标
(dropsite-min-distance wood > 4);距离树木过远
=>
(chat-to-allies "由于距离树木过远,建造另一个伐木场")
(build lumber-camp);建造
(disable-self)
)

(defrule
(building-type-count-total siege-workshop == 0);攻城武器制造所为0
(can-build siege-workshop);能建造攻城武器制造所
(current-age == imperial-age);帝王时代
(building-type-count-total town-center > 0);当存在城镇中心:防止城镇中心被毁后建造失控
=>
(chat-to-allies "建造攻城武器制造所")
(build siege-workshop);建造
)

(defrule
(building-type-count-total castle == 0);城堡数
(can-build castle);能建造城堡
(building-type-count-total town-center > 0);当存在城镇中心:防止城镇中心被毁后建造失控
=>
(build castle);建造
(chat-to-allies "建造城堡")
)

(defrule
(building-type-count-total blacksmith == 0);兵工厂为0
(can-build blacksmith);能建造兵工厂
(building-type-count-total town-center > 0);当存在城镇中心:防止城镇中心被毁后建造失控
=>
(chat-to-allies "建设兵工厂")
(build blacksmith);建造
)

(defrule
(building-type-count-total watch-tower-line < 1);箭塔数
(can-build watch-tower-line);能建造箭塔
(building-type-count-total town-center > 0);当存在城镇中心:防止城镇中心被毁后建造失控
=>
(build watch-tower-line);建造
(chat-to-allies "建造箭塔")
)

(defrule
(building-type-count-total watch-tower-line < 2);箭塔数
(can-build watch-tower-line);能建造箭塔
(current-age == castle-age);城堡时代
(building-type-count-total town-center > 0);当存在城镇中心:防止城镇中心被毁后建造失控
=>
(build watch-tower-line);建造
(chat-to-allies "建造箭塔")
)

(defrule
(building-type-count-total castle >= 1);城堡数
(goal attackyet yes);已经进攻
(can-build castle);能建造城堡
(building-type-count-total town-center > 0);当存在城镇中心:防止城镇中心被毁后建造失控
=>
(build-forward castle);前线建造
(chat-to-allies "前线建造城堡")
)

(defrule
(building-type-count-total monastery == 0);修道院为0
(can-build monastery);能建造修道院
(building-type-count-total town-center > 0);当存在城镇中心:防止城镇中心被毁后建造失控
=>
(chat-to-allies "建设修道院")
(build monastery);建造
)

;环形防线

;排除要塞,岛屿地图
#load-if-not-defined FORTRESS-MAP
#load-if-not-defined ISLANDS-MAP
#load-if-not-defined TEAM-ISLANDS-MAP
(defrule
(true)
=>
(chat-to-allies "已经构造环形防线")
(enable-wall-placement 1);启动环形防线1
(disable-self)
)
(defrule
(can-build-gate 1);按环形防线为范围1的距离建城门
(building-type-count-total mining-camp > 1);矿场大于1
=>
(chat-to-allies "建造环形防线城门")
(build-gate 1)
)
(defrule
(building-type-count town-center > 0);有城镇中心
(can-build-wall 1 stone-wall-line)
(building-type-count-total mining-camp > 1);矿场大于1
=>
(build-wall 1 stone-wall-line);按环形防线为范围1的距离建城墙
(chat-to-allies "建造环形防线城墙")
)

#end-if
#end-if
#end-if

#load-if-not-defined ARABIA-MAP
(defrule
(building-type-count-total mining-camp > 1);矿场大于1
(building-type-count-total dock == 0);码头为0
(can-build dock)
=>
(build dock)
(chat-to-allies "建造码头")
)
#end-if

(defrule
(building-type-count-total mining-camp > 1);当存在矿场2
(building-type-count-total barracks == 0);军营为0
(building-type-count-total monastery >= 1);有修道院
(can-build barracks);能建造军营
(building-type-count-total town-center > 0);当存在城镇中心:防止城镇中心被毁后建造失控
=>
(chat-to-allies "建造军营")
(build barracks);建造
)

(defrule
(town-under-attack);正遭受攻击
(can-build barracks);能建造军营
(building-type-count-total barracks == 0);军营为0
(building-type-count-total town-center > 0);当存在城镇中心:防止城镇中心被毁后建造失控
=>
(chat-to-allies "正遭受攻击,建造军营!")
(build barracks);建造
(disable-self)
)

(defrule
(building-type-count-total mining-camp == 0);矿场数
(wood-amount >= 100);木材达标
(unit-type-count villager >= 10)
(building-type-count-total mill > 0);有磨坊
(goal upgrade age2)
=>
(chat-to-allies "建造一个矿场")
(build mining-camp);建造
)

(defrule
(building-type-count-total mining-camp == 0);矿场数
(wood-amount >= 100);木材达标
(unit-type-count villager >= 10)
(building-type-count-total mill > 0);有磨坊
(current-age == feudal-age);封建时代
=>
(chat-to-allies "建造一个矿场")
(build mining-camp);建造
)

(defrule
(building-type-count mining-camp == 1);矿场数
(can-build mining-camp)
=>
(chat-to-allies "建造另一个矿场")
(build mining-camp);建造
)

(defrule
(building-type-count-total mining-camp > 1);矿场大于1
(wood-amount >= 150);木材达标
(dropsite-min-distance gold > 5);距离金矿过远
=>
(set-strategic-number sn-camp-max-distance 100);最大营地距离100
(chat-to-allies "由于距离金矿过远,建造另一个矿场")
(build mining-camp);建造
(disable-self)
)

(defrule
(building-type-count-total mining-camp > 1);矿场大于1
(wood-amount >= 150);木材达标
(dropsite-min-distance stone > 5);距离石矿过远
=>
(chat-to-allies "由于距离石矿过远,建造另一个矿场")
(set-strategic-number sn-camp-max-distance 100);最大营地距离100
(build mining-camp);建造
(disable-self)
)
;Genius 组件 :DEngineI 引擎
;DEngineI:research
;研究科技和时代

;织布机(修订版)

(defrule
(unit-type-count villager >= age1villagernum);人数达标
(can-research ri-loom);检测研发织布机
(gold-amount >= 50);黄金达标
=>
(chat-to-allies "研发织布机")
(research ri-loom);研发
(disable-self)
)

(defrule
(food-amount < 40 );食物不足
(can-research ri-loom);检测研发织布机
(gold-amount >= 50);黄金达标
=>
(chat-to-allies "研发织布机")
(research ri-loom);研发
(disable-self)
)

(defrule
(housing-headroom == 0 );住房不足
(unit-type-count villager >= 5);保证有一定人数
(can-research ri-loom);检测研发织布机
(gold-amount >= 50);黄金达标
=>
(chat-to-allies "研发织布机")
(research ri-loom);研发
(disable-self)
)

;伐木场项目
(defrule
(can-research ri-double-bit-axe);检测研发双面斧
=>
(chat-to-all "研发双面斧")
(research ri-double-bit-axe);研发
(disable-self)
)

(defrule
(can-research ri-bow-saw);检测研发弓形锯
=>
(chat-to-all "研发弓形锯")
(research ri-bow-saw);研发
(disable-self)
)

;磨坊项目
(defrule
(can-research ri-horse-collar);检测研发兽耕
=>
(chat-to-all "研发兽耕")
(research ri-horse-collar);研发
(disable-self)
)

(defrule
(can-research ri-heavy-plow);检测研发重犁
=>
(chat-to-all "研发重犁")
(research ri-heavy-plow);研发
(disable-self)
)

;城镇中心项目
(defrule
(can-research ri-wheel-barrow);检测研发独轮手推车
=>
(chat-to-all "研发独轮手推车")
(research ri-wheel-barrow);研发
(disable-self)
)

(defrule
(can-research ri-town-patrol);检测研发城镇巡逻
(current-age >= castle-age);至少城堡时代
=>
(chat-to-all "研发城镇巡逻")
(research ri-town-patrol);研发
(disable-self)
)

(defrule
(can-research ri-town-watch);检测研发城镇了望
(current-age >= castle-age);至少城堡时代
(not (town-under-attack));城镇没有收到攻击
=>
(chat-to-all "研发城镇了望")
(research ri-town-watch);研发
(disable-self)
)

;市场项目
(defrule
(can-research ri-cartography);检测研发制图学
(player-in-game any-ally);有同盟正在游戏
=>
(chat-to-all "研发制图学")
(research ri-cartography);研发
(disable-self)
)

(defrule
(can-research ri-coinage);检测研发造币
(player-in-game any-ally);有同盟正在游戏
=>
(chat-to-all "研发造币")
(research ri-coinage);研发
(disable-self)
)

(defrule
(can-research ri-banking);检测研发银行业
(player-in-game any-ally);有同盟正在游戏
=>
(chat-to-all "研发银行业")
(research ri-banking);研发
(disable-self)
)

;兵营项目
(defrule
(can-research ri-man-at-arms);检测研发剑士
(current-age >= castle-age);至少城堡时代
=>
(chat-to-all "研发剑士")
(research ri-man-at-arms);研发
(disable-self)
)

;马厩项目
(defrule
(can-research ri-light-cavalry);检测研发轻骑兵
=>
(chat-to-all "研发轻骑兵")
(research ri-light-cavalry);研发
(disable-self)
)

;修道院项目
(defrule
(can-research ri-atonement);检测研发赎罪
=>
(chat-to-all "研发赎罪")
(research ri-atonement);研发
(disable-self)
)

(defrule
(can-research ri-block-printing);检测研发雕版印刷术
=>
(chat-to-all "研发雕版印刷术")
(research ri-block-printing);研发
(disable-self)
)

(defrule
(can-research ri-redemption);检测研发拯救
(current-age == imperial-age);帝王时代
=>
(chat-to-all "研发拯救")
(research ri-redemption);研发
(disable-self)
)

(defrule
(can-research ri-illumination);检测研发启示
=>
(chat-to-all "研发启示")
(research ri-illumination);研发
(disable-self)
)

;兵工厂项目
(defrule
(can-research ri-fletching);检测研发羽箭
=>
(chat-to-all "研发羽箭")
(research ri-fletching);研发
(disable-self)
)

;兵工厂项目
(defrule
(can-research ri-bodkin-arrow);检测研发未知科技
=>
(chat-to-all "研发锥子箭")
(research ri-bodkin-arrow);研发锥子箭
(disable-self)
)

;兵工厂项目
(defrule
(can-research ri-bracer);检测研发护腕
=>
(chat-to-all "研发护腕")
(research ri-bracer);研发护腕
(disable-self)
)

;大学项目
(defrule
(can-research ri-murder-holes);检测研发剁孔
=>
(chat-to-all "研发剁孔")
(research ri-murder-holes);研发
(disable-self)
)

;研发时代
(defrule
(current-age == dark-age);黑暗时代
(unit-type-count villager >= age1villagernum);人数达标
(food-amount >= 500);食物达标
(can-research feudal-age);检测研发封建时代
=>
(chat-to-allies "研发封建时代")
(set-goal upgrade age2)
(research feudal-age);研发封建时代
(chat-to-allies "增加了最大营地距离")
(set-strategic-number sn-camp-max-distance 25);最大营地距离
(set-strategic-number sn-maximum-town-size 25);最大城镇规模
(disable-self)
)

(defrule
(current-age == feudal-age);封建时代
(unit-type-count villager >= age2villagernum);人数达标
(can-research castle-age);检测研发城堡时代
=>
(chat-to-allies "研发城堡时代")
(research castle-age);研发城堡时代
(set-strategic-number sn-maximum-town-size 30);最大城镇规模
(set-goal upgrade age3)
(disable-self)
)

(defrule
(current-age == castle-age);城堡时代
(unit-type-count villager >= age3villagernum);人数达标
(can-research imperial-age);检测研发帝王时代
(can-build siege-workshop)
=>
(chat-to-allies "研发帝王时代")
(set-goal upgrade age4)
(research imperial-age);研发帝王时代
(set-strategic-number sn-maximum-town-size 40);最大城镇规模
(disable-self)
)